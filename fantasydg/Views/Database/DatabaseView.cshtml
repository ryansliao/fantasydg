@model IEnumerable<object>

@{
    ViewBag.Title = "Tournament Database";
    bool hasData = Model != null && Model.Any();
    var roundView = Model != null && Model.Any() && Model.First().GetType().Name == "RoundScore";
}

<h2>Database View</h2>

<style>
    .filter-form {
        display: flex;
        gap: 1rem;
        align-items: center;
        margin-bottom: 0.25rem;
    }

    /* Contains table and scrolls */
    .table-scroll-container {
        margin-top: 0;
        padding-bottom: 10px;
        max-height: 80vh;
        overflow-y: auto;
        overflow-x: auto;
    }
    
    /* The entire table */
    stats-table {
        padding: 6px 10px;
        border-collapse: collapse;
        table-layout: fixed;
        margin-bottom: -20px;
        overflow-y: auto;
        overflow-x: auto;
    }

    /* Column headers */
    .stats-table thead th {
        font-size: 0.85rem;
        white-space: normal;
        vertical-align: middle;
        text-align: center;
        padding: 5px 7px;
        line-height: 15px;
        position: sticky;
        top: 0;
        background: rgba(225, 225, 225);
        z-index: 2;
    }

    /* First column */
    .stats-table th:first-child,
    .stats-table td:first-child {
        position: sticky;
        left: 0;
        background: rgba(240, 240, 240);
        z-index: 2;
        min-width: 60px;
        max-width: 60px;
    }

    /* Second column */
    .stats-table th:nth-child(2),
    .stats-table td:nth-child(2) {
        position: sticky;
        left: 60px;
        min-width: 200px;
        max-width: 200px;
        background: rgba(240, 240, 240);
        z-index: 2;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: left;
        white-space: nowrap;
    }

    /* Columns excluding the first two */
    .stats-table th:nth-child(n+3),
    .stats-table td:nth-child(n+3) {
        min-width: 75px;
        max-width: 75px;
        text-align: center;
    }

    /* First header of column headers */
    .stats-table thead th:first-child {
        z-index: 3;
        background: rgba(225, 225, 225);
    }

    /* Second header of column headers */
    .stats-table thead th:nth-child(2) {
        text-align: left;
        z-index: 3;
        background: rgba(225, 225, 225);
    }

    /* Table rows */
    .stats-table tbody tr:nth-child(odd) {
        background-color: white;
    }

    .stats-table tbody tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    /* Table cells */
    .stats-table td {
        font-size: 0.9rem;
        white-space: nowrap;
        padding: 5px 7px;
        line-height: 15px;
        text-overflow: ellipsis;
        text-align: center;
    }
  
</style>

<form method="get" asp-action="DatabaseView" asp-controller="Database" class="filter-form">
    <div class="filter-item">
        <label for="tournament">Tournament:</label>
        @{
            int selectedId = ViewBag.SelectedTournamentId ?? -1;
        }

        <select id="tournamentDropdown" name="tournamentId" onchange="this.form.submit()">
            @foreach (var t in ViewBag.Tournaments as List<fantasydg.Models.Tournament>)
            {
                if (t.Id == selectedId)
                {
                    <option value="@t.Id" selected>@t.Name</option>
                }
                else
                {
                    <option value="@t.Id">@t.Name</option>
                }
            }
        </select>
    </div>

    <div class="filter-item">
        <label for="division">Division:</label>
        <select id="divisionDropdown" name="division" onchange="this.form.submit()">
            @foreach (var d in ViewBag.Divisions as List<string>)
            {
                if (d == (string)ViewBag.SelectedDivision)
                {
                    <option value="@d" selected>@d</option>
                }
                else
                {
                    <option value="@d">@d</option>
                }
            }
        </select>
    </div>

    <div class="filter-item">
        <label for="round">Round:</label>
        <select id="roundDropdown" name="round" onchange="this.form.submit()">
            <option value="">All</option>
            @if (ViewBag.Rounds is List<int> rounds)
            {
                foreach (var r in rounds)
                {
                    if ((int?)ViewBag.SelectedRound == r)
                    {
                        <option value="@r" selected>@r</option>
                    }
                    else
                    {
                        <option value="@r">@r</option>
                    }
                }
            }
        </select>
    </div>
</form>
<hr />
@if (!hasData)
{
    <div class="alert alert-warning mt-4">
        No data available. Please enter a tournament to begin.
    </div>
}
else
{
    @if (roundView)
    {
        @await Html.PartialAsync("_RoundTable", (IEnumerable<fantasydg.Models.RoundScore>)Model)
    }
    else
    {
        @await Html.PartialAsync("_TournamentTable", (IEnumerable<fantasydg.Models.PlayerTournament>)Model)
    }
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const topScroll = document.querySelector('.table-scroll-top');
        const bottomScroll = document.querySelector('.table-scroll-bottom');
        const wrapper = document.querySelector('.table-scroll-wrapper');

        // Create fake scrollbars with the same width as the table
        function syncScrollBar(scrollDiv) {
            const fakeScroll = document.createElement('div');
            fakeScroll.style.width = wrapper.scrollWidth + 'px';
            fakeScroll.style.height = '1px';
            scrollDiv.appendChild(fakeScroll);
        }

        syncScrollBar(topScroll);
        syncScrollBar(bottomScroll);

        topScroll.addEventListener('scroll', () => {
            wrapper.scrollLeft = topScroll.scrollLeft;
            bottomScroll.scrollLeft = topScroll.scrollLeft;
        });

        bottomScroll.addEventListener('scroll', () => {
            wrapper.scrollLeft = bottomScroll.scrollLeft;
            topScroll.scrollLeft = bottomScroll.scrollLeft;
        });

        wrapper.addEventListener('scroll', () => {
            topScroll.scrollLeft = wrapper.scrollLeft;
            bottomScroll.scrollLeft = wrapper.scrollLeft;
        });
    });

    document.querySelectorAll('#tournamentDropdown, #divisionDropdown, #roundDropdown').forEach(el => {
        el.addEventListener('change', () => {
            const tournamentId = document.getElementById('tournamentDropdown').value;
            const division = document.getElementById('divisionDropdown').value;
            const round = document.getElementById('roundDropdown').value;

            let url = `/tournaments/${tournamentId}`;
            if (division) url += `/${division}`;
            if (round) url += `/${round}`;

            window.location.href = url;
        });
    });
</script>