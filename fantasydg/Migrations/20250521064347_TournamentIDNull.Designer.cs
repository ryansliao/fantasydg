// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fantasydg.Data;

#nullable disable

namespace fantasydg.Migrations
{
    [DbContext(typeof(DGDbContext))]
    [Migration("20250521064347_TournamentIDNull")]
    partial class TournamentIDNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("fantasydg.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("RoundId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<double>("Birdie")
                        .HasColumnType("float");

                    b.Property<double>("BirdiePlus")
                        .HasColumnType("float");

                    b.Property<double>("BogeyPlus")
                        .HasColumnType("float");

                    b.Property<double>("C1InReg")
                        .HasColumnType("float");

                    b.Property<double>("C1Putting")
                        .HasColumnType("float");

                    b.Property<double>("C1xPutting")
                        .HasColumnType("float");

                    b.Property<double>("C2InReg")
                        .HasColumnType("float");

                    b.Property<double>("C2Putting")
                        .HasColumnType("float");

                    b.Property<double>("DoubleBogeyPlus")
                        .HasColumnType("float");

                    b.Property<double>("EaglePlus")
                        .HasColumnType("float");

                    b.Property<double>("Fairway")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ObRate")
                        .HasColumnType("float");

                    b.Property<double>("Par")
                        .HasColumnType("float");

                    b.Property<double>("Parked")
                        .HasColumnType("float");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<int>("PuttDistance")
                        .HasColumnType("int");

                    b.Property<int>("RoundScore")
                        .HasColumnType("int");

                    b.Property<double>("Scramble")
                        .HasColumnType("float");

                    b.Property<double>("StrokesGainedC1xPutting")
                        .HasColumnType("float");

                    b.Property<double>("StrokesGainedC2Putting")
                        .HasColumnType("float");

                    b.Property<double>("StrokesGainedPutting")
                        .HasColumnType("float");

                    b.Property<double>("StrokesGainedTeeToGreen")
                        .HasColumnType("float");

                    b.Property<double>("StrokesGainedTotal")
                        .HasColumnType("float");

                    b.Property<int>("TournamentScore")
                        .HasColumnType("int");

                    b.HasKey("Id", "RoundId");

                    b.HasIndex("RoundId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("fantasydg.Models.Round", b =>
                {
                    b.Property<int>("RoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoundId"));

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Exists")
                        .HasColumnType("bit");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("int");

                    b.Property<string>("TournamentDivision")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("RoundId");

                    b.HasIndex("TournamentId", "TournamentDivision");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("fantasydg.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rounds")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id", "Division");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("fantasydg.Models.Player", b =>
                {
                    b.HasOne("fantasydg.Models.Round", "Round")
                        .WithMany("Players")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Round");
                });

            modelBuilder.Entity("fantasydg.Models.Round", b =>
                {
                    b.HasOne("fantasydg.Models.Tournament", "Tournament")
                        .WithMany("RoundList")
                        .HasForeignKey("TournamentId", "TournamentDivision");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("fantasydg.Models.Round", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("fantasydg.Models.Tournament", b =>
                {
                    b.Navigation("RoundList");
                });
#pragma warning restore 612, 618
        }
    }
}
